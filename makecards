#!/usr/bin/perl

use POSIX;
use Text::CSV_XS;


$FILENAME_TEMPLATE=$ARGV[0];
$FILENAME_DATA=$ARGV[1];

open(infile,"<".$FILENAME_TEMPLATE);
@lines=<infile>;
$svgtemplate=join("",@lines);
close(infile);

$csv=Text::CSV_XS->new({binary=>1});

open(infile,"<".$FILENAME_DATA);
chomp($line=<infile>);
$csv->parse($line);
@headers=$csv->fields();

$NAMEBASE=$FILENAME_TEMPLATE;
$NAMEBASE=~s/.*\///;
$NAMEBASE=~s/.svg$//i;
$NAMEBASE=~s/ //gs;
print STDERR "NAMEBASE: $NAMEBASE\n";

$n=0;$p=0;
$svg=$svgtemplate;

while(chomp($line=<infile>)) {
  if($line) {
    $csv->parse($line);
    @fields=$csv->fields();

    for($i=0;$i<=$#headers;$i++) {
      $fields[$i]=~s/^ +//sg;
      $fields[$i]=~s/ +$//sg;
      # $NAMEBASE=~s/\{$headers[$i]\}/$fields[$i]/gs;
      # $NAMEBASE=~s/ //gs;
    }

    print STDERR join(',',@fields)."\n";
    for($i=0;$i<=$#headers;$i++) {
      $fields[$i]=~s/^ +//sg;
      $fields[$i]=~s/ +$//sg;
      $fields[$i]=~s/&/&amp;/sg;
      $svg=~s/\{$headers[$i]\|.{1,20}\}/$fields[$i]/s;
      $svg=~s/\{$headers[$i]\}/$fields[$i]/s;
    }

    $n++;
    if($svg!~/\{$headers[0]\}/) {
      $n=0;
      $svg=~s/\{[A-Za-z0-9\.-_]+\|(.{1,20})\}/$1/sg;
      $svg=~s/\{[A-Za-z0-9\.-_]+\}//sg;
      print "Writing page $p\n";
      open(outfile,">output/$NAMEBASE-$p.svg");
      print outfile $svg;
      close(outfile);
      system("inkscape output/$NAMEBASE-$p.svg --export-pdf=output/$NAMEBASE-$p.pdf -T");
      $p++;
      $svg=$svgtemplate;
    }

  }
}

if($n!=0) {
  # $svg=~s/\{template.*?\}//sg;
  $svg=~s/\{[A-Za-z0-9\.-_]+\|(.{1,20})\}/$1/sg;
  $svg=~s/\{[A-Za-z0-9\.-_]+\}//sg;
  print "Writing page $p\n";
  open(outfile,">output/$NAMEBASE-$p.svg");
  print outfile $svg;
  close(outfile);
  system("inkscape output/$NAMEBASE-$p.svg --export-pdf=output/$NAMEBASE-$p.pdf -T");
  $p++;
}

$filelist="";
for($i=0;$i<$p;$i++) {
  $filelist.="output/$NAMEBASE-$i.pdf ";
}
print "Combining to single file\n";
system("gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=output/$NAMEBASE.pdf $filelist");

close(infile);

