#!/usr/bin/env python3

# my (almost) state-less password manager

import hashlib, os, re, sys, base64, time, json

try:
  # try hard
  from getpass import getpass
except ImportError:
  # stop complaining and try harder
  os.system("sudo pip3 install getpass")
  from getpass import getpass

# domain name in question, e.g. google.com
domain = sys.argv[1]

# load parameters for different sites' nitpicks about password requirements
params = {}
with open('passgen-params.json', 'r') as f:
    try:
        params = json.loads(f.read()).get(domain, {})
    except:
        print("Error loading params")

# have user input master password
master_password = getpass()

# nth password used on site
if 'n' not in params:
  params['n'] = 0

# tail to tack onto all passwords to generally satisfy
# 99% of sites' stupid requirements
if 'tail' not in params:
  params['tail'] = "$1Aa"

# prevents symbols from appearing in password, for sites that ban symbols
if 'nosymbols' not in params:
  params['nosymbols'] = False

# length of password (not including tail)
if 'length' not in params:
  params['length'] = 14

# generate password
thehash = hashlib.pbkdf2_hmac(
  'sha256',
  (master_password + "/" + domain).encode('utf-8'),
  b'',
  200000 + params['n'],
)

password_text = base64.b64encode(thehash).decode('utf-8')
if params['nosymbols']:
  password_text = re.sub('[^A-Za-z0-9]', '', password_text)

password = password_text[0:params['length']] + params['tail']

print(password)

