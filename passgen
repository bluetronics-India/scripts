#!/usr/bin/env python3

# my (almost) state-less password manager

import os, re, sys, base64, time, json

try:
  # try hard
  from getpass import getpass
except ImportError:
  # stop complaining and try harder
  os.system("sudo pip3 install getpass")
  from getpass import getpass

try:
  # try hard
  from passlib.utils.pbkdf2 import pbkdf2
except ImportError:
  # stop complaining and try harder
  os.system("sudo pip3 install passlib")
  from passlib.utils.pbkdf2 import pbkdf2

# load parameters for different sites' nitpicks about password requirements
with open('passgen-params.json', 'r') as f:
    params = json.loads(f.read())

master_password = getpass()

# nth password used on site
n = 0
if 'n' in params.get(sys.argv[1],{}):
  n = params[sys.argv[1]]['n']

# tail to tack onto all passwords to generally satisfy
# 99% of sites' stupid requirements
tail = "$1Aa"
if 'tail' in params.get(sys.argv[1],{}):
  tail = params[sys.argv[1]]['tail']

# prevents symbols from appearing in password, for sites that ban symbols
nosymbols = False
if 'nosymbols' in params.get(sys.argv[1],{}):
  nosymbols = params[sys.argv[1]]['nosymbols']

# length of password (not including tail)
length = 12
if 'length' in params.get(sys.argv[1],{}):
  length = params[sys.argv[1]]['length']

thehash = pbkdf2(
  (master_password + "/" + sys.argv[1]).encode('utf-8'),
  b'',
  100000+n,
  keylen = 16
)

password_text = base64.b64encode(thehash).decode('utf-8')
if nosymbols:
  password_text = re.sub('[^A-Za-z0-9]', '', password_text)

password = password_text[0:length] + tail

print(password)

