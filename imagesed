#!/usr/bin/env python3
import cv2
import sys
import numpy
import time

def hex_to_rgb(value):
    value = value.lstrip('#')
    lv = len(value)
    return tuple(int(value[i:i + lv // 3], 16) for i in reversed(range(0, lv, lv // 3)))

if __name__ == "__main__":

    if len(sys.argv) < 4:
        print("Usage: imagesed infile.png outfile.png ff00ff:000000 00ffff:010101 ...")
        print("Like sed, but for images. Maps one color to another.")
        exit()

    img = cv2.imread(sys.argv[1])
 
    # todo: make a 16M lookup table to speed this up and rewrite in C
    replace_table = { }
  
    for replacement in sys.argv[3:]:
        replace_from, replace_to = replacement.split(':')
        replace_from_rgb = hex_to_rgb(replace_from)
        replace_to_rgb = hex_to_rgb(replace_to)
        replace_table[replace_from_rgb] = replace_to_rgb

    for i in range(img.shape[0]):
        for j in range(img.shape[1]):
            c = tuple(img[i,j])
            if c in replace_table:
                img[i,j] = replace_table[c]

    cv2.imwrite(sys.argv[2], img)
